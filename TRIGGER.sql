-- CREATE LOG TABLE 'CHANGELOG'

CREATE TABLE CHANGELOG
(
  SN INT GENERATED ALWAYS AS IDENTITY  
, LOGDATE DATE DEFAULT SYSDATE NOT NULL 
, ACTION VARCHAR2(20) NOT NULL 
, REMARKS VARCHAR2(500) NOT NULL 
);

COMMENT ON COLUMN CHANGELOG.SN IS 'PRIMARY KEY IDENTIFIER';

COMMENT ON COLUMN CHANGELOG.LOGDATE IS 'LOG DATE';

COMMENT ON COLUMN CHANGELOG.ACTION IS 'ACTION TYPE';

COMMENT ON COLUMN CHANGELOG.REMARKS IS 'DESCRIPTION';

-- CREATE TRIGGER TR_EMPLOYEES_INSERT

CREATE OR REPLACE TRIGGER TR_EMPLOYEES_INSERT 
AFTER INSERT ON EMPLOYEES 
FOR EACH ROW 
BEGIN
    DBMS_OUTPUT.PUT_LINE('TRIGGER INITIATED');
  --INSERT INTO CHANGELOG TABLE
  INSERT INTO CHANGELOG(ACTION, REMARKS)
  SELECT 'INSERT', 'New Employee' || :NEW.EMPLOYEE_ID || ':' || :NEW.FIRST_NAME FROM DUAL;
  
END;

SET SERVEROUTPUT ON;
INSERT INTO EMPLOYEES
    WITH A AS
    (
        SELECT MAX(EMPLOYEE_ID) AS MAX_EMPLOYEEID FROM EMPLOYEES
    )
    SELECT
        MAX_EMPLOYEEID + ROW_NUMBER() OVER(ORDER BY EMPLOYEE_ID) AS EMPLOYEE_ID
        ,FIRST_NAME, LAST_NAME, EMAIL||1 AS EMAIL, 
        PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID
    FROM 
        EMPLOYEES,A
    WHERE   
        ROWNUM <=10;
        
COMMIT;

SELECT * FROM CHANGELOG;

SELECT * FROM Employees;


SELECT * FROM EMPLOYEES WHERE EMAIL LIKE '%1';

UPDATE EMPLOYEES  SET EMAIL = EMAIL||1
WHERE EMAIL NOT LIKE '%1';